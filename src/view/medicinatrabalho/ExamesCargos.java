/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.medicinatrabalho;

import dao.DaoFuncaoTrabalhador;
import dao.DaoModeloExames;
import dao.medicinatrabalho.DaoExameComplementar;
import dao.medicinatrabalho.DaoTipoMedicinaTrabalho;
import java.util.ArrayList;
import model.medicinatrabalho.ExameComplementar;
import java.util.Collection;
import java.util.Collections;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.FuncaoTrabalhador;
import model.medicinatrabalho.Modeloexames;
import model.medicinatrabalho.TipoMedicinaTrabalho;

/**
 *
 * @author Ronaldo
 */
public class ExamesCargos extends javax.swing.JInternalFrame {

    /**
     * Creates new form ExamesCargos
     */
    private DaoFuncaoTrabalhador daoFuncaoTrabalhador;
    private DaoTipoMedicinaTrabalho daoTipoMedicinaTrabalho;
    private DaoModeloExames daoModeloExames;
    
    private List<Long> adicionados = new ArrayList<>();
    private List<Long> excluidos = new ArrayList<>();
    
    public void abrirExames(){
if (TextFuncoes.getSelectedItem()!=null &&
            TextTipoMedicinaTrabalho.getSelectedItem()!=null){
            try{
                TextAgentesAgressores.setText("");
                
                DefaultTableModel tableModel = (DefaultTableModel) TabelaExameComplementar.getModel();
                tableModel.setNumRows(0);
                    
                adicionados.clear();
                
                FuncaoTrabalhador funcaoTrabalhador = (FuncaoTrabalhador) TextFuncoes.getSelectedItem();
                TipoMedicinaTrabalho tipoMedicinaTrabalho = (TipoMedicinaTrabalho) TextTipoMedicinaTrabalho.getSelectedItem();
                Modeloexames modeloexames = daoModeloExames.getByCargoTipoMedicinaTrabalho(funcaoTrabalhador.getId(), tipoMedicinaTrabalho.getId());
                
                if (modeloexames!=null){
                    TabelaExameComplementar.getColumnModel().getColumn(0).setPreferredWidth(10);
                    List<ExameComplementar> lista = modeloexames.getExamesComplementares();
                    Collections.sort(lista);
                    for(ExameComplementar e: modeloexames.getExamesComplementares()){
                         tableModel.addRow(new String[]{
                                 e.getId().toString(),
                                 e.getDescricao()});
                    }

                    TextAgentesAgressores.setText(modeloexames.getAgentesAgressores()==null?"":modeloexames.getAgentesAgressores());
                }
            }catch(Exception ex){
                ex.printStackTrace();
                JOptionPane.showMessageDialog(null, "Problema de Conexão!");
            }
        }else{
            TextAgentesAgressores.setText("");
        }        
    }
    
    public ExamesCargos() {
        initComponents();
        
        try{
            daoModeloExames = new DaoModeloExames();
            
            daoFuncaoTrabalhador = new DaoFuncaoTrabalhador();
            //Busca a listas
            List<FuncaoTrabalhador> lista = daoFuncaoTrabalhador.listar();
            //Ordena a lista
            Collections.sort(lista);
            //Adiciona item vazio no primeiro item
            lista.add(0, null);
            //Adiciona lista no campo de texto
            TextFuncoes.setModel(new DefaultComboBoxModel(lista.toArray()));
            
            DaoExameComplementar daoExameComplementar = new DaoExameComplementar();
            List<ExameComplementar> listaExame = daoExameComplementar.listar();
            Collections.sort(listaExame);
            listaExame.add(0,null);
            TextListaExameComplementar.setModel(new DefaultComboBoxModel(listaExame.toArray()));
            
            
            daoTipoMedicinaTrabalho = new DaoTipoMedicinaTrabalho();
            //Busca a listas
            List<TipoMedicinaTrabalho> listaTipoMedicina = daoTipoMedicinaTrabalho.listar();
            //Ordena a lista
            Collections.sort(listaTipoMedicina);
            //Adiciona item vazio no primeiro item
            listaTipoMedicina.add(0, null);
            //Adiciona lista no campo de texto
            TextTipoMedicinaTrabalho.setModel(new DefaultComboBoxModel(listaTipoMedicina.toArray()));            
        }catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Problem de conexão");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        brSalvar = new javax.swing.JButton();
        TextFuncoes = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        TextAgentesAgressores = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        TabelaExameComplementar = new javax.swing.JTable();
        TextListaExameComplementar = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        btIncluirExameComplementar = new javax.swing.JButton();
        btExcluir = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        TextTipoMedicinaTrabalho = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Exames Complementares");

        jPanel1.setBackground(new java.awt.Color(230, 246, 246));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Função Paciente:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Agentes Agressores:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Exames Complementares:");

        brSalvar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        brSalvar.setText("SALVAR");
        brSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brSalvarActionPerformed(evt);
            }
        });

        TextFuncoes.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                TextFuncoesItemStateChanged(evt);
            }
        });

        TextAgentesAgressores.setColumns(20);
        TextAgentesAgressores.setRows(5);
        jScrollPane1.setViewportView(TextAgentesAgressores);

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton2.setText("Limpar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        TabelaExameComplementar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Exame Complementar"
            }
        ));
        jScrollPane3.setViewportView(TabelaExameComplementar);
        if (TabelaExameComplementar.getColumnModel().getColumnCount() > 0) {
            TabelaExameComplementar.getColumnModel().getColumn(0).setMinWidth(60);
            TabelaExameComplementar.getColumnModel().getColumn(0).setMaxWidth(60);
        }

        jLabel4.setText("Exame Complementar");

        btIncluirExameComplementar.setText("Incluir");
        btIncluirExameComplementar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btIncluirExameComplementarActionPerformed(evt);
            }
        });

        btExcluir.setText("Excluir");
        btExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluirActionPerformed(evt);
            }
        });

        jLabel5.setText("Tipo Medicina Trabalho");

        TextTipoMedicinaTrabalho.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                TextTipoMedicinaTrabalhoItemStateChanged(evt);
            }
        });

        jButton1.setText("Remover");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 603, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(TextListaExameComplementar, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btIncluirExameComplementar, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(jLabel2))
                            .addComponent(jLabel5)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(TextTipoMedicinaTrabalho, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(TextFuncoes, javax.swing.GroupLayout.Alignment.LEADING, 0, 362, Short.MAX_VALUE)))
                        .addGap(0, 174, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(brSalvar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TextFuncoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addGap(3, 3, 3)
                .addComponent(TextTipoMedicinaTrabalho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TextListaExameComplementar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btIncluirExameComplementar)
                    .addComponent(btExcluir))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(brSalvar)
                    .addComponent(jButton2)
                    .addComponent(jButton1))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        setBounds(0, 0, 627, 563);
    }// </editor-fold>//GEN-END:initComponents

    private void brSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brSalvarActionPerformed
        if (TextFuncoes.getSelectedItem()!=null){
            try{
                boolean novo = false;
                
                FuncaoTrabalhador funcaoTrabalhador = (FuncaoTrabalhador) TextFuncoes.getSelectedItem();
                TipoMedicinaTrabalho tipoMedicinaTrabalho = (TipoMedicinaTrabalho) TextTipoMedicinaTrabalho.getSelectedItem();
                Modeloexames modelo = daoModeloExames.getByCargoTipoMedicinaTrabalho(funcaoTrabalhador.getId(), tipoMedicinaTrabalho.getId());
                
                if (modelo == null){ 
                    modelo = new Modeloexames();
                    modelo.setTipoMedicinaTrabalho(tipoMedicinaTrabalho);
                    modelo.setCargo(funcaoTrabalhador);
                    novo = true;
                }
                modelo.setAgentesAgressores(TextAgentesAgressores.getText());
                
                for(Long Id: excluidos){
                    modelo.getExamesComplementares().remove(new DaoExameComplementar().getById(Id));
                }
                
                for(Long Id: adicionados){
                    ExameComplementar e = new DaoExameComplementar().getById(Id);
                    if (!modelo.getExamesComplementares().contains(e)){
                        modelo.getExamesComplementares().add(e);             
                    }
                }
                if (novo)
                    daoModeloExames.insert(modelo);
                else
                    daoModeloExames.update(modelo);
                
                JOptionPane.showMessageDialog(null, "Registro salvo");
            }catch(Exception ex){
                ex.printStackTrace();
                JOptionPane.showMessageDialog(null, "Problema de conexão!");
            }
        }
    }//GEN-LAST:event_brSalvarActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            if(TextFuncoes.getSelectedItem()!=null){
                TextAgentesAgressores.setText("");
                TextListaExameComplementar.setSelectedItem(null);
                TextTipoMedicinaTrabalho.setSelectedItem(null);
                TextFuncoes.setSelectedItem(null);

                DefaultTableModel tableModel = (DefaultTableModel) TabelaExameComplementar.getModel();
                tableModel.setNumRows(0);
            }
        } catch (Exception ex) {
            Logger.getLogger(ExamesCargos.class.getName()).log(Level.SEVERE, null, ex);
        }
       
    }//GEN-LAST:event_jButton2ActionPerformed

    private void TextFuncoesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_TextFuncoesItemStateChanged
        TextAgentesAgressores.setText("");
        DefaultTableModel tableModel = (DefaultTableModel) TabelaExameComplementar.getModel();
        tableModel.setNumRows(0);
        abrirExames();
    }//GEN-LAST:event_TextFuncoesItemStateChanged

    private void btIncluirExameComplementarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btIncluirExameComplementarActionPerformed
        if (TextFuncoes.getSelectedItem() !=null && TextListaExameComplementar.getSelectedItem()!=null){
            FuncaoTrabalhador funcaoTrabalhador = (FuncaoTrabalhador) TextFuncoes.getSelectedItem();
            ExameComplementar exameComplementar = (ExameComplementar) TextListaExameComplementar.getSelectedItem();
            

            
            if (!adicionados.contains(exameComplementar.getId())){
                adicionados.add(exameComplementar.getId());
                excluidos.remove(exameComplementar.getId());
                
                DefaultTableModel tableModel = (DefaultTableModel) TabelaExameComplementar.getModel();
                
                tableModel.addRow(new String[]{
                exameComplementar.getId().toString(),
                exameComplementar.getDescricao()});    
                
            }
        }
    }//GEN-LAST:event_btIncluirExameComplementarActionPerformed

    private void btExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluirActionPerformed
        try {
            if (TabelaExameComplementar.getSelectedRow() > -1){
                ExameComplementar exameComplementar = new DaoExameComplementar().getById(Long.parseLong(TabelaExameComplementar.getValueAt(TabelaExameComplementar.getSelectedRow(), 0).toString()));
                excluidos.add(exameComplementar.getId());
                adicionados.remove(exameComplementar.getId());
                ((DefaultTableModel)TabelaExameComplementar.getModel()).removeRow(TabelaExameComplementar.getSelectedRow());
            }
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Problema de Conexão!");
        }
    }//GEN-LAST:event_btExcluirActionPerformed

    private void TextTipoMedicinaTrabalhoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_TextTipoMedicinaTrabalhoItemStateChanged
                                 
        TextAgentesAgressores.setText("");
        DefaultTableModel tableModel = (DefaultTableModel) TabelaExameComplementar.getModel();
        tableModel.setNumRows(0);
        abrirExames();
    }//GEN-LAST:event_TextTipoMedicinaTrabalhoItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        TipoMedicinaTrabalho tipoMedicinaTrabalho = (TipoMedicinaTrabalho) TextTipoMedicinaTrabalho.getSelectedItem();
        FuncaoTrabalhador funcaoTrabalhador = (FuncaoTrabalhador) TextFuncoes.getSelectedItem();
        
        if (tipoMedicinaTrabalho!=null && funcaoTrabalhador!=null){
            try {
                DaoModeloExames daoModeloExames = new DaoModeloExames();
                Modeloexames modeloexames = daoModeloExames.getByCargoTipoMedicinaTrabalho(funcaoTrabalhador.getId(), tipoMedicinaTrabalho.getId());
                if (modeloexames !=null){
                    daoModeloExames.delete(modeloexames);
                }
                TextTipoMedicinaTrabalho.setSelectedItem(null);
                TextFuncoes.setSelectedItem(null);
                TextAgentesAgressores.setText("");
                JOptionPane.showMessageDialog(null, "Modelo excluído com sucesso!");
            } catch (Exception ex) {
                Logger.getLogger(ExamesCargos.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "Poblema de conexão!");
            }
            
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ExamesCargos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ExamesCargos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ExamesCargos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ExamesCargos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ExamesCargos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TabelaExameComplementar;
    private javax.swing.JTextArea TextAgentesAgressores;
    private javax.swing.JComboBox<String> TextFuncoes;
    private javax.swing.JComboBox<String> TextListaExameComplementar;
    private javax.swing.JComboBox<String> TextTipoMedicinaTrabalho;
    private javax.swing.JButton brSalvar;
    private javax.swing.JButton btExcluir;
    private javax.swing.JButton btIncluirExameComplementar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
